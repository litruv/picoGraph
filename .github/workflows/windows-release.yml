name: Build and Release Windows

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag to use when creating the release (e.g. v0.1.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y wine64 wine32 mono-devel

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Windows installer
        run: npm run build:win

      - name: Locate generated executable
        id: find_exe
        run: |
          set -euo pipefail
          artifact=$(find dist -type f -name '*.exe' -print -quit)
          if [ -z "$artifact" ]; then
            echo "No Windows executable produced in the dist folder." >&2
            exit 1
          fi
          echo "artifactPath=$artifact" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: ${{ steps.find_exe.outputs.artifactPath }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: dist

      - name: Prepare release assets
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          mkdir -p release
          for file in dist/windows-installer/*.exe; do
            mv "$file" release/
          done

      - name: Determine tag name
        id: tag
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${{ github.event.inputs.release_tag }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          artifacts: release/*.exe
          allowUpdates: true
          skipIfReleaseExists: true
          artifactContentType: application/octet-stream
